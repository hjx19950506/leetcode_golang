package grayCode

//镜像对称
//当00 01 11 10需要新增一位时
//前四个数复制上一轮的4个下来前面加一位0，后四个数是上一轮的镜像复制前面加1
//变为000 001 011 010 110 111 101 100
func grayCode(n int) []int {
	res := make([]int, 1 << n)
	for i := 0; i <= n; i++ {
		//1 << i -1 - j与j是新一轮中互为对称的坐标
		for j := 1 << i - 1; j > 1 << i -1 - j; j-- {
			//1 << (i - 1)是在最高位置一
			res[j] = 1 << (i - 1) +  res[1 << i -1 - j]
		}
	}
	return res
}